<ishaan> : Hello! I'm Ishaan. 1st Year Comps<Ashwin> : What's today's session about.? <vilas_m> : Hey guys! Sorry for the delay. Was waiting to see if your batchmates are going to join<ishaan> : Competetive coding<vilas_m> : So, we have a wonderful attendance today I see :P <vilas_m> : Are both of you comfortable with C++? <ishaan> : I am<Anirudh_> : yes<Ashwin> : Yes <vilas_m> : Great! :) <vilas_m> : So, did you guys try the problems posted on the group? Any issues?<vilas_m> : Be quick in responding guys. Otherwise, this will get boring :P <ishaan> : sorry I couldn't try the problems<Anirudh_> : No didnt try<vilas_m> : Alright. But do try them soon and approach any of the mentors for help :) <ishaan> : Sure!<Anirudh_> : OK<vilas_m> : Ok, if you guys have seen the problems, you might have realised that many problems have several test cases for the input. <vilas_m> : What do you do for dealing with several test cases? <vilas_m> : Simple. Just write <vilas_m> : cin>>T; (or scanf("%d", &T); for C users )<vilas_m> : while(T--)<vilas_m> : {<vilas_m> : }<vilas_m> : Your code goes inside the flower brackets<ishaan> : ok!<vilas_m> : When you are coding on competitive programming platforms, one thing to realise is that - the inputs and outputs are dealt with in seperate files.<vilas_m> : What I mean to say is, the input is read from the stdin file and the output is written stdout file by default.<Ashwin> : Ok<vilas_m> : This gives us a really good advantage. Can anyone guess what it is? <ishaan> : I don't know :/<Anirudh_> : no idea<Ashwin> : U can manipulate the files separately.? <vilas_m> : So basically you can print the output required immediately after it is calculated for a given test case. You need not wait to read all input to print the output. <vilas_m> : Have noticed a lot of people storing their outputs for all test cases in an array or something and then printing all of it at once. <vilas_m> : Don't do this ^.<vilas_m> : Just do:<vilas_m> : cin>>T;<vilas_m> : while(T--)<vilas_m> : { -Take the input for the test case<vilas_m> :   -Do the manipulations<vilas_m> :   -Print the output<vilas_m> : }<ishaan> : ohh.. okay<Anirudh_> : okay<Ashwin> : What's wrong if we store the outputs in an array.? <vilas_m> : Don't wait for the while loop to end for printing. As soon as you get the answer, print it. <ishaan> : time consuming?<vilas_m> : @Ashwin, It's redundant. Why store the output in an array and then print it all at once. <vilas_m> : Yes ishaan.<Ashwin> : Ok<vilas_m> : Next<ishaan> : ok!<vilas_m> : I have seen many of my batchmates do this and get errors :P<vilas_m> : Do not print redundant text such as "Enter the number of test cases", "Enter the input", "The output is:" and so on. It'll cause errors.<ishaan> : ohh!!<vilas_m> : I know that teachers in school/college frown seeing codes without these^ :P But please do not do this in online contests<vilas_m> : There is no person sitting on the other end of the line who'll get impressed seeing how neat your output looks xD<Ashwin> : Oh!! <vilas_m> : Your output file will be compared with the correct answer output file character by character. <vilas_m> : The question will specift the pattern of output required, so make sure you follow that pattern strictly<ishaan> : Okay. Will keep that in mind<vilas_m> : specify* <vilas_m> : The running time of your codes is also really important.<vilas_m> : Typically, you will get TLE - Time limit exceeded if your code run time is over a few seconds (the limit varies according to the website/problem/language used. Generally a few seconds is set as the limit)<ishaan> : okay<vilas_m> : So you have to be careful and make sure the algorithms you use are efficient. <Ashwin> : What does run time depend on? <vilas_m> : The run time and time limit for each question depends on the language as well.<vilas_m> : I am coming to that soon Ashwin :) <vilas_m> : For example, as Python, Java codes are much slower than C.<vilas_m> : Time limit for Python is set five times higher than C/C++, and for Java, it is twice as that of C/C++.<vilas_m> : Even though this relaxation is provided, it usually isn't enough to compensate for the slower languages. So it's better to use C/C++. <ishaan> : cool<vilas_m> : Any doubts so far?<ishaan> : no<Ashwin> : Why is the run time for python,  java higher than c/c++? <vilas_m> : Python is a bit more abstract. Like - in c++ you specify the type of data like int, float etc right? <Ashwin> : Yes <vilas_m> : In python - You don't specify the type. You can directly use the variables<vilas_m> : And there are many other things similar to this that makes Python, Java slower.  <vilas_m> : Basically python is more user-friendly i can say :P <vilas_m> : If you guys are working on C++ (which should be preferred over C), you might have heard about how cin/cout statements are much slower than printf/scanf statements.<vilas_m> : So, you might often see problems statements or websites saying "Use printf/scanf statements instead of cin/cout to make your codes run faster"<ishaan> : Yes. I've heard<vilas_m> : However, cin/cout statements are actually faster than printf/scanf<Ashwin> : What does declaring/not declaring variable have to do with speed.? <Ashwin> : What makes cin cout  faster than printf and scanf.? <vilas_m> : The compiler has to find out which type the variable is and make sure there is appropriate memory allocated for that. For example - When you say int A[8]; it says by default to the C++ compiler that 8 elements of integer type is going to be used further on, so allocate space for it. <vilas_m> : But, this is skipped in Python. Additional time is required for that. 