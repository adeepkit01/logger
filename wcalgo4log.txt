<ashwin> : Hello<vilas_m> : Hi! We ll start when everybody joins. <vilas_m> : So i guess we ll start.<vilas_m> : Today we will cover STL containers and if time permits, get started with a bit of number theory required for competitive coding<vilas_m> : Can someone point out what is a container, first of all?<vilas_m> : Ok, so in simple terms, something which can hold data is called a container<vilas_m> : First we shall deal with vectors<vilas_m> : Vectors are very similar to arrays, except that they can change their size at any time. <vilas_m> : To use them, insert #include<vector> in your code <vilas_m> : Or if you're using bits/stdc++.h already, then thats fine too<vilas_m> : We define a vector like this: vector<vector_type> var_name; <vilas_m> : So if we want a vector named 'v' with integer elements, we write vector<int> v; <vilas_m> : Inserting an element: to insert an element (say 'x') into the vector, we write v.push_back(x)<vilas_m> : This writes the element 'x' at the end of the vector<vilas_m> : How do we know the size of a vector? <vilas_m> : We use the function size(). So if we want to know the size of the vector v, we can write int count = v.size()<vilas_m> : Be careful not to write statements like vector<int> v[10] when you need a vector of size 10. <vilas_m> : The above statement actually initialises 10 seperate vectors instead of a single vector of size 10. <vilas_m> : To change the size of a vector, we can use the resize() function.<vilas_m> : So to declare a vector of size 10, we can write 2 statements: vector<int> v; v.resize(10);