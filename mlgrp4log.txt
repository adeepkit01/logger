<ujdcodr> : Welcome to the first session of the Winter Mentorship Program 2017<ujdcodr> : I'll wait for 5 mins<ujdcodr> : until then you can just reply "Connected" so that i know that the channel is working<Ravali> : Connected<dharma> : connected<Swastik> : connected<Shivani> : Connected<ujdcodr> : OK<ujdcodr> : Let's begin<ujdcodr> : Field of study that gives computers the ability to learn without being explicitly programmed<ujdcodr> : That's the layman's way of defining Machine Learning<ujdcodr> : You want an automaton to learn how to solve a task on its own by training it<ujdcodr> : But how do i phrase this is a more "mathematically aesthetic" way<ujdcodr> : Let's look at what a "well posed learning problem" is:<ujdcodr> : "A computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E."<ujdcodr> : take a minute to read this and understand it<ujdcodr> : sounds very poetic doesn't it?<ujdcodr> : everyone done with reading the definition?<dharma> : ya<ujdcodr> : I'll explain this once everyone is done<Shivani> : yes<Swastik> : yes<Ravali> : done<Prabhjot> : Yes<ujdcodr> : so over here "T" is the problem you want to solve<ujdcodr> : "E" is what the learning program has "learnt" after conducting several tests on the given dataset<ujdcodr> : And your performance measure "P" is like a probability value<ujdcodr> : this value should improve(as in tend closer to 1 or 0) depending on the type of problem posed<ujdcodr> : Let me illustrate with an example<ujdcodr> : Suppose you've made a program that classifies your mail as Spam and Not Spam<ujdcodr> : and you run this on a dataset of a 100000 emails<ujdcodr> : this number can be arbitrary<ujdcodr> : T would be the task of of "correctly" classifying an email as SPAM or NOT SPAM<ujdcodr> : you must be very clear, the emails are already labeled(so we know as humans what kind of mail is and is not spam)<ujdcodr> : but the algorithm doesn't<ujdcodr> : So you know the right answer<ujdcodr> : and your algorithm should produce the right answer for a good "fraction" of the test cases <ujdcodr> : So the experience "E" over here will be the algorithm learning how an email is classified as SPAM or NOT SPAM<ujdcodr> : like i said, we are feeding the "right answers" from a lot of training examples<ujdcodr> : and the algo should figure out, "given a new email, should i classify it as spam or not spam"